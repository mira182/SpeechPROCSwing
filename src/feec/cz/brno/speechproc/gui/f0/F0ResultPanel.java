/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package feec.cz.brno.speechproc.gui.f0;

import au.com.bytecode.opencsv.CSVReader;
import feec.cz.brno.speechproc.gui.DeleteResultCsvFile;
import feec.cz.brno.speechproc.gui.GraphWindow;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author mira
 */
public class F0ResultPanel extends javax.swing.JPanel implements DeleteResultCsvFile {
    
    private final static Logger logger = LogManager.getLogger(F0ResultPanel.class);
    
    private DefaultTableModel f0TableModel = new DefaultTableModel();
    
    private final File csvResultFile;
    private final File sourceSoundFile;
    
    private GraphWindow formantsGraph;

    /**
     * Creates new form F0ResultPanel
     * @param sourceSoundFile
     * @param csvResultFile
     */
    public F0ResultPanel(File sourceSoundFile, File csvResultFile) {
        this.csvResultFile = csvResultFile;
        this.sourceSoundFile = sourceSoundFile;
        initComponents();
        loadF0Table();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        showGraphButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        f0Table = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        showGraphButton.setText("Show graph");
        showGraphButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showGraphButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(339, Short.MAX_VALUE)
                .addComponent(showGraphButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(showGraphButton)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        add(jScrollPane1, java.awt.BorderLayout.PAGE_END);

        f0Table.setModel(f0TableModel);
        jScrollPane2.setViewportView(f0Table);

        add(jScrollPane2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void showGraphButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showGraphButtonActionPerformed
        if (formantsGraph == null) {
            F0PitchCharts charts = new F0PitchCharts();
            formantsGraph = new GraphWindow(csvResultFile.getAbsolutePath(), charts.createF0Chart(csvResultFile));
            formantsGraph.setVisible(true);
        }
    }//GEN-LAST:event_showGraphButtonActionPerformed

    private void loadF0Table() {
        String[] csvLine;
        try {
            CSVReader reader = new CSVReader(new FileReader(csvResultFile), ' ');
            reader.readNext();
            f0TableModel.setColumnIdentifiers(new String[] {"Time min (s)", "Time max (s)", "F0 mean (Hz)", "F0 min (Hz)", "F0 max (Hz)", "F0 stdev (Hz)", "F0 VR (Hz)", "rel F0 stdev (%)", "rel F0 VR (%)"});
            while ((csvLine = reader.readNext()) != null) {
                f0TableModel.addRow(csvLine);
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Failed to load formants table from CSV file!", "Error", JOptionPane.ERROR_MESSAGE);
            logger.error("Failed to load formants table from CSV file!", ex);
        }
        f0Table.setModel(f0TableModel);
        f0TableModel.fireTableDataChanged();
    }
    
    @Override
    public void deleteCsvFile() {
        csvResultFile.delete();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable f0Table;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton showGraphButton;
    // End of variables declaration//GEN-END:variables
}
