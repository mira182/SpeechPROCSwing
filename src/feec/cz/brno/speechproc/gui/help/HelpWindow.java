/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package feec.cz.brno.speechproc.gui.help;

import java.io.IOException;
import java.net.URL;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionEvent;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author mira
 */
public class HelpWindow extends javax.swing.JFrame implements TreeSelectionListener {
    
    private final static Logger logger = LogManager.getLogger(HelpWindow.class);
    
    private JTree helpTree;
    private URL helpURL;

    /**
     * Creates new form HelpWindow
     */
    public HelpWindow() {
        initTree();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        leftScrollPane = new javax.swing.JScrollPane(helpTree);
        rightScrollPane = new javax.swing.JScrollPane();
        htmlEditorPane = new javax.swing.JEditorPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Help");
        setPreferredSize(new java.awt.Dimension(640, 480));

        jSplitPane1.setDividerLocation(210);
        jSplitPane1.setLeftComponent(leftScrollPane);

        htmlEditorPane.setEditable(false);
        rightScrollPane.setViewportView(htmlEditorPane);

        jSplitPane1.setRightComponent(rightScrollPane);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initTree() {
        //Create the nodes.
        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Help");
        createNodes(top);

        //Create a tree that allows one selection at a time.
        helpTree = new JTree(top);
        helpTree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);

        //Listen for when the selection changes.
        helpTree.addTreeSelectionListener(this);
    }
    
    private void displayURL(URL url) {
        try {
            if (url != null) {
                htmlEditorPane.setPage(url);
            } else { //null url
                htmlEditorPane.setText("File Not Found");
            }
        } catch (IOException e) {
            logger.error("Attempted to read a bad URL: " + url, e);
        }
    }
    
    private void createNodes(DefaultMutableTreeNode top) {
        DefaultMutableTreeNode category = null;
        DefaultMutableTreeNode book = null;

        category = new DefaultMutableTreeNode("Parameters calculation");
        top.add(category);

        // Formants
        book = new DefaultMutableTreeNode(new HelpNodeInfo("Formants", "/help/parameters/formants.html"));
        category.add(book);

        // F0
        book = new DefaultMutableTreeNode(new HelpNodeInfo("Fundamental frequency", "/help/parameters/f0.html"));
        category.add(book);

        //JFC Swing Tutorial
        book = new DefaultMutableTreeNode(new HelpNodeInfo("Intensity", "/help/parameters/intensity.html"));
        category.add(book);

        category = new DefaultMutableTreeNode("Results");
        top.add(category);

        // 
//        book = new DefaultMutableTreeNode(new HelpNodeInfo("The Java Virtual Machine Specification", "vm.html"));
//        category.add(book);
    }
    
    @Override
    public void valueChanged(TreeSelectionEvent e) {
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) helpTree.getLastSelectedPathComponent();

        if (node == null) {
            return;
        }

        Object nodeInfo = node.getUserObject();
        if (node.isLeaf()) {
            HelpNodeInfo helpNodeInfo = (HelpNodeInfo) nodeInfo;
            displayURL(helpNodeInfo.getUrl());
        } else {
            displayURL(helpURL);
        }
        logger.debug("Selected node \"" + node.toString() + "\"");
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JEditorPane htmlEditorPane;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JScrollPane leftScrollPane;
    private javax.swing.JScrollPane rightScrollPane;
    // End of variables declaration//GEN-END:variables


    class HelpNodeInfo {
        private final String name;
        private final URL url;

        public HelpNodeInfo(String name, String fileName) {
            this.name = name;
            url = HelpWindow.class.getClassLoader().getClass().getResource(fileName);
            if (url == null) {
                logger.warn("Couldn't find file: " + fileName);
            }
        }

        public String getName() {
            return name;
        }

        public URL getUrl() {
            return url;
        }

        @Override
        public String toString() {
            return this.name;
        }
    }
}
