/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package feec.cz.brno.speechproc.gui.results;

import feec.cz.brno.speechproc.calc.api.SpeechParameter;
import static feec.cz.brno.speechproc.calc.api.SpeechParameter.JITTER_PARAM;
import static feec.cz.brno.speechproc.calc.api.SpeechParameter.MAX_PARAM;
import static feec.cz.brno.speechproc.calc.api.SpeechParameter.MEAN_PARAM;
import static feec.cz.brno.speechproc.calc.api.SpeechParameter.MEDIAN_PARAM;
import static feec.cz.brno.speechproc.calc.api.SpeechParameter.MIN_PARAM;
import static feec.cz.brno.speechproc.calc.api.SpeechParameter.SHIMMER_PARAM;
import static feec.cz.brno.speechproc.calc.api.SpeechParameter.STDEV_PARAM;
import feec.cz.brno.speechproc.calc.api.params.ResultStatus;
import feec.cz.brno.speechproc.calc.api.params.ScriptParameters;
import feec.cz.brno.speechproc.calc.api.params.ScriptResult;
import feec.cz.brno.speechproc.gui.f0.F0ResultPanel;
import feec.cz.brno.speechproc.gui.formants.FormantsResultPanel;
import feec.cz.brno.speechproc.gui.intensity.IntensityResultPanel;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 *
 * @author hynstm
 */
public class ResultPanel extends javax.swing.JPanel {
    
    private ResultsTableModel resultTableModel = new ResultsTableModel();

    /**
     * Creates new form ResultPanel
     */
    public ResultPanel() {
        resultTableModel.setColumnIdentifiers(new String[] {"Number", "Sound file name", "Status"});
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable(resultTableModel);
        showDetailsButton = new javax.swing.JButton();
        compareButton = new javax.swing.JButton();

        resultTable.setModel(resultTableModel);
        jScrollPane1.setViewportView(resultTable);

        showDetailsButton.setText("Result details");
        showDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showDetailsButtonActionPerformed(evt);
            }
        });

        compareButton.setText("Compare results");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(99, Short.MAX_VALUE)
                .addComponent(compareButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showDetailsButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(showDetailsButton)
                    .addComponent(compareButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void showDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showDetailsButtonActionPerformed
        showResultDetails();
    }//GEN-LAST:event_showDetailsButtonActionPerformed

    public void addRow(ScriptResult result) {
        resultTableModel.addRow(result);
        resultTableModel.fireTableDataChanged();
    }
    
    public ResultsTableModel getResultTableModel() {
        return resultTableModel;
    }
    
    private void showResultDetails() {
        for (int row : resultTable.getSelectedRows()) {
            ScriptResult selectedResult = resultTableModel.getResult(row);
            if (selectedResult.getStatus().equals(ResultStatus.OK)) {
                JFrame resultWindow = new JFrame();
                resultWindow.setTitle("F0 pitch of " + selectedResult.getSoundFile().getName());
                JPanel resultPanel = null;
                ScriptParameters params = selectedResult.getAdditionalParams();
                switch (selectedResult.getCategory()) {
                    case FORMANTS:
                        resultPanel = new FormantsResultPanel(selectedResult.getSoundFile(), selectedResult.getCsvResult(), (Boolean)params.getParameterValue(MEAN_PARAM), (Boolean)params.getParameterValue(MEDIAN_PARAM));
                        break;
                    case F0:
                        resultPanel = new F0ResultPanel(selectedResult.getSoundFile(), selectedResult.getCsvResult(), selectedResult.getCsvStatsResult(), 
                                (Boolean) params.getParameterValue(MEAN_PARAM), (Boolean) params.getParameterValue(MEDIAN_PARAM),
                                (Boolean) params.getParameterValue(STDEV_PARAM), (Boolean) params.getParameterValue(JITTER_PARAM), 
                                (Boolean) params.getParameterValue(SHIMMER_PARAM), (Boolean) params.getParameterValue(MIN_PARAM), 
                                (Boolean) params.getParameterValue(MAX_PARAM));
                        break;
                    case INTENSITY:
                        resultPanel = new IntensityResultPanel(selectedResult.getSoundFile(), selectedResult.getCsvResult(), selectedResult.getCsvStatsResult());
                        break;
                }
                resultWindow.setContentPane(resultPanel);
                resultWindow.pack();
                resultWindow.setVisible(true);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton compareButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable resultTable;
    private javax.swing.JButton showDetailsButton;
    // End of variables declaration//GEN-END:variables
}
