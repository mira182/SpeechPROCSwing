/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package feec.cz.brno.speechproc.gui.formants;

import feec.cz.brno.speechproc.main.SpeechProc;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.text.NumberFormatter;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author hynstm
 */
public class FormantParamsDialog extends javax.swing.JDialog implements PropertyChangeListener {
    
    private final static Logger logger = LogManager.getLogger(SpeechProc.class);
    
    private Double timeStep;
    private Integer maxFormants;
    private Double maxFormantsNumber;
    private Double windowLength;
    private Integer preemphasis;
    
    private boolean ok = false;
    
    private NumberFormatter doubleFormatter;
    private NumberFormatter integerFormatter = new NumberFormatter();

    /**
     * Creates new form FormantParamsDialog
     * @param parent
     * @param modal
     */
    public FormantParamsDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initFormatters();
        initComponents();
        setLocationRelativeTo(parent);
    }
    
    private void initFormatters() {
        doubleFormatter = new NumberFormatter();
        doubleFormatter.setValueClass(Double.class);
        doubleFormatter.setCommitsOnValidEdit(true);
        
        integerFormatter.setValueClass(Integer.class);
        integerFormatter.setCommitsOnValidEdit(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        timeStepFormattedTextField = new javax.swing.JFormattedTextField(doubleFormatter);
        maxFormantsNumberFormattedTextField = new javax.swing.JFormattedTextField();
        windowLengthFormattedTextField = new javax.swing.JFormattedTextField();
        preemphasisFormattedTextField = new javax.swing.JFormattedTextField();
        maxFormantFormattedTextField = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Formants parameters");

        jLabel1.setLabelFor(timeStepFormattedTextField);
        jLabel1.setText("Time step (s):");

        jLabel2.setLabelFor(maxFormantsNumberFormattedTextField);
        jLabel2.setText("Maximum formants number:");

        jLabel3.setLabelFor(maxFormantsNumberFormattedTextField);
        jLabel3.setText("Maximum formant (Hz):");

        jLabel4.setLabelFor(windowLengthFormattedTextField);
        jLabel4.setText("Window length (s):");

        jLabel5.setLabelFor(preemphasisFormattedTextField);
        jLabel5.setText("Pre-emphasis (Hz):");

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        timeStepFormattedTextField.setText("0.005");
        timeStepFormattedTextField.addPropertyChangeListener(this);

        maxFormantsNumberFormattedTextField.setText("5");

        windowLengthFormattedTextField.setText("0.025");

        preemphasisFormattedTextField.setText("50");

        maxFormantFormattedTextField.setText("5000");
        maxFormantFormattedTextField.setPreferredSize(new java.awt.Dimension(36, 19));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(preemphasisFormattedTextField)
                            .addComponent(windowLengthFormattedTextField)
                            .addComponent(timeStepFormattedTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                            .addComponent(maxFormantsNumberFormattedTextField)
                            .addComponent(maxFormantFormattedTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(timeStepFormattedTextField))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(maxFormantsNumberFormattedTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(maxFormantFormattedTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(windowLengthFormattedTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(preemphasisFormattedTextField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        try {
            timeStep = ((Number) timeStepFormattedTextField.getValue()).doubleValue();
            maxFormantsNumber = ((Number) maxFormantsNumberFormattedTextField.getValue()).doubleValue();
            maxFormants = ((Number) maxFormantFormattedTextField.getValue()).intValue();
            windowLength = ((Number) windowLengthFormattedTextField.getValue()).doubleValue();
            preemphasis = ((Number) preemphasisFormattedTextField.getValue()).intValue();
            
            ok = true;
            
            dispose();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Wrong format of number!", e.getMessage(), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed
    
    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        Object source = evt.getSource();
        if (source == timeStepFormattedTextField) {
            timeStep = (Double) timeStepFormattedTextField.getValue();
        } 
//else if (source == rateField) {
//            rate = ((Number) rateField.getValue()).doubleValue();
//        } else if (source == numPeriodsField) {
//            numPeriods = ((Number) numPeriodsField.getValue()).intValue();
//        }

        
        
//        try {
//            Double.parseDouble(evt.getNewValue().toString());
//        } catch (NumberFormatException e) {
//            errorMessageLabel.setText("Value format of time step is incorrect!");
//            logger.error("Value format of time step is incorrect!", e);
//        }
    }
    
    public Double getTimeStep() {
        return timeStep;
    }

    public Integer getMaxFormants() {
        return maxFormants;
    }

    public Double getMaxFormantNumber() {
        return maxFormantsNumber;
    }

    public Double getWindowLength() {
        return windowLength;
    }

    public Integer getPreemphasis() {
        return preemphasis;
    }

    public boolean isOk() {
        return ok;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JFormattedTextField maxFormantFormattedTextField;
    private javax.swing.JFormattedTextField maxFormantsNumberFormattedTextField;
    private javax.swing.JButton okButton;
    private javax.swing.JFormattedTextField preemphasisFormattedTextField;
    private javax.swing.JFormattedTextField timeStepFormattedTextField;
    private javax.swing.JFormattedTextField windowLengthFormattedTextField;
    // End of variables declaration//GEN-END:variables

}
